{"version":3,"file":"ngx-onsenui.js.map","sources":["ng://ngx-onsenui/lib/ons/params.ts","ng://ngx-onsenui/lib/directives/ons-navigator.ts","ng://ngx-onsenui/lib/directives/ons-tabbar.ts","ng://ngx-onsenui/lib/directives/ons-switch.ts","ng://ngx-onsenui/lib/directives/ons-range.ts","ng://ngx-onsenui/lib/directives/ons-select.ts","ng://ngx-onsenui/lib/directives/ons-input.ts","ng://ngx-onsenui/lib/directives/ons-pull-hook.ts","ng://ngx-onsenui/lib/directives/ons-lazy-repeat.ts","ng://ngx-onsenui/lib/directives/ons-splitter.ts","ng://ngx-onsenui/lib/ons/notification.ts","ng://ngx-onsenui/lib/ons/platform.ts","ng://ngx-onsenui/lib/ons/component-loader.ts","ng://ngx-onsenui/lib/ons/alert-dialog-factory.ts","ng://ngx-onsenui/lib/ons/popover-factory.ts","ng://ngx-onsenui/lib/ons/dialog-factory.ts","ng://ngx-onsenui/lib/ons/modal-factory.ts","ng://ngx-onsenui/lib/directives/ons-segment.ts","ng://ngx-onsenui/lib/directives/ons-search-input.ts","ng://ngx-onsenui/lib/directives/ons-checkbox.ts","ng://ngx-onsenui/lib/directives/ons-radio.ts","ng://ngx-onsenui/lib/ngx-onsenui.ts"],"sourcesContent":["\nexport class Params {\n  constructor(private _data: any = {}) {}\n\n  at(key: string): any {\n    return this._data[key];\n  }\n\n  get data(): any {\n    return this._data;\n  }\n}\n\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  ComponentRef,\n  Type,\n  ComponentFactoryResolver,\n  Input,\n  ViewContainerRef,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport * as ons from 'onsenui';\n\nimport {Params} from '../ons/params';\n\nexport class NavigatorPage {\n  constructor(\n    public elementRef: ElementRef | null = null,\n    public destroy: Function = function() {},\n    public animator: any = null,\n    public params: Params = new Params()) {\n  }\n}\n\n/**\n * @element ons-navigator\n * @directive OnsNavigator\n * @selector ons-navigator\n * @codpen KgvAvx\n * @description\n *   [en]Angular directive for `<ons-navigator>` component.[/en]\n *   [ja]`<ons-navigator>`要素のAngularディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Page</div>\n *       </ons-toolbar>\n *       <div class=\"content\">...</div>\n *     `\n *   })\n *   class DefaultPageComponent { }\n *\n *   @Component({\n *     selector: 'navigator-app',\n *     template: `\n *     <ons-navigator [page]=\"page\"></ons-navigator>\n *     `\n *   })\n *   export class AppComponent {\n *     page = DefaultPageComponent\n *   }\n */\n@Directive({\n  selector: 'ons-navigator'\n})\nexport class OnsNavigator implements OnDestroy {\n  private _lastPageLoader: Function;\n\n  /**\n   * @input page\n   * @desc\n   *   [en]Type of the page component.[/en]\n   *   [ja]ページコンポーネントのクラスを指定します。[/ja]\n   */\n  @Input('page') set pageComponentType(page: Type<any>) {\n    this.element.page = page;\n  }\n\n  get element(): any {\n    return this._elementRef.nativeElement;\n  }\n\n  get nativeElement(): any {\n    return this._elementRef.nativeElement;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _resolver: ComponentFactoryResolver,\n    private _viewContainer: ViewContainerRef,\n    private _injector: Injector,\n    private _zone: NgZone) {\n    this._lastPageLoader = this.element.pageLoader;\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  _createPageLoader() {\n    const componentRefMap: WeakMap<HTMLElement, ComponentRef<any>> = new WeakMap<HTMLElement, ComponentRef<any>>();\n\n    return new ons.PageLoader(\n      ({page, parent, params}: any, done: Function) => {\n        this._zone.run(() => {\n          const pageParams = new Params(params || {});\n          const injector = Injector.create({\n            providers: [\n              {provide: Params, useValue: pageParams},\n              {provide: OnsNavigator, useValue: this}\n            ],\n            parent: this._injector\n          });\n\n          const factory = this._resolver.resolveComponentFactory(page);\n          const selector = 'ons-navigator';\n          const pageComponentRef = factory.create(injector, undefined);\n          this._viewContainer.insert(pageComponentRef.hostView);\n          const pageElement = pageComponentRef.location.nativeElement;\n          componentRefMap.set(pageElement, pageComponentRef);\n\n          this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n          done(pageElement);\n        });\n      },\n      (element: any) => {\n        const componentRef = componentRefMap.get(element);\n\n        if (componentRef) {\n          componentRef.destroy();\n          componentRefMap.delete(element);\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.element.pageLoader = this._lastPageLoader;\n  }\n}\n\n","import {\n  Component,\n  ComponentRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Injector,\n  Directive,\n  ElementRef,\n  Type,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  NgZone\n} from '@angular/core';\nimport * as ons from 'onsenui';\n\n/**\n * @element ons-tabbar\n * @directive OnsTabbar\n * @selector ons-tabbar\n * @description\n *   [en]Angular directive for `<ons-tabbar>` component.[/en]\n *   [ja]`<ons-tabbar>`要素のためのディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Page</div>\n *       </ons-toolbar>\n *       <div class=\"content\">...</div>\n *     `\n *   })\n *   class PageComponent {\n *   }\n *\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-tabbar swipeable (swipe)=\"onSwipe($event)\">\n *       <div class=\"tabbar__content\"></div>\n *       <div class=\"tabbar\">\n *         <ons-tab label=\"Page1\" icon=\"ion-home\" [page]=\"page\" active></ons-tab>\n *         <ons-tab label=\"Page2\" icon=\"ion-help\" [page]=\"page\"></ons-tab>\n *         <ons-tab label=\"Page3\" icon=\"ion-stop\" [page]=\"page\"></ons-tab>\n *       </div>\n *     </ons-tabbar>\n *     `\n *   })\n *   export class AppComponent {\n *     page = PageComponent\n * \n *     onSwipe(event) {\n *       console.log(event);\n *     }\n *   }\n */\n@Directive({\n  selector: 'ons-tabbar'\n})\nexport class OnsTabbar {\n  private _element: any;\n\n  /**\n   * @output swipe\n   * @param $event\n   * @param $event.index\n   * @param $event.options\n   * @desc\n   *   [en]Triggers when the tabbar is swiped.[/en]\n   *   [ja]`<ons-tabbar>`がスワイプされた時に発火します。[/ja]\n   */\n  @Output('swipe') _swipe = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {\n    this._element = _elementRef.nativeElement;\n    this._element.onSwipe = (index: number, options: any) => this._swipe.emit({index, options});\n  }\n}\n\n/**\n * @element ons-tab\n * @directive OnsTab\n * @selector ons-tab\n * @description\n *   [en]Angular directive for `<ons-tab>` component.[/en]\n *   [ja]`<ons-tab>`要素のためのディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Page</div>\n *       </ons-toolbar>\n *       <div class=\"content\">...</div>\n *     `\n *   })\n *   class PageComponent {\n *   }\n *\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-tabbar>\n *       <div class=\"tabbar__content\"></div>\n *       <div class=\"tabbar\">\n *         <ons-tab label=\"Page1\" icon=\"ion-home\" [page]=\"page\" active></ons-tab>\n *         <ons-tab label=\"Page2\" icon=\"ion-help\" [page]=\"page\"></ons-tab>\n *         <ons-tab label=\"Page3\" icon=\"ion-stop\" [page]=\"page\"></ons-tab>\n *       </div>\n *     </ons-tabbar>\n *     `\n *   })\n *   export class AppComponent {\n *     page = PageComponent\n *   }\n */\n@Directive({\n  selector: 'ons-tab'\n})\nexport class OnsTab implements OnDestroy {\n  private _pageComponent: ComponentRef<any> | null = null;\n\n  /**\n   * @input page\n   * @desc\n   *   [en]Specify the page component that is displayed when the tab is active.[/en]\n   *   [ja]読み込むページコンポーネントを指定します。[/ja]\n   */\n  @Input('page') set page(pageComponentType: Type<any>) {\n    this._elementRef.nativeElement.page = pageComponentType;\n  }\n\n  constructor(private _elementRef: ElementRef,\n    private _viewContainer: ViewContainerRef,\n    private _resolver: ComponentFactoryResolver,\n    private _zone: NgZone) {\n    // set up ons-tab's page loader\n    this._elementRef.nativeElement.pageLoader = this._createPageLoader();\n  }\n\n  _createPageLoader() {\n    const PageLoader = <any>ons.PageLoader;\n    return new PageLoader(\n      ({page, parent}: any, done: Function) => {\n        this._zone.run(() => {\n          const factory = this._resolver.resolveComponentFactory(page);\n          const pageComponentRef = this._viewContainer.createComponent(factory, 0);\n\n          if (this._pageComponent) {\n            this._pageComponent.destroy();\n          }\n          this._pageComponent = pageComponentRef;\n\n          const pageElement = pageComponentRef.location.nativeElement;\n          parent.appendChild(pageElement); // dirty fix to insert in correct position\n\n          done(pageElement);\n        });\n      },\n      () => {\n        if (this.hasOwnProperty('_pageComponent')) {\n          if (this._pageComponent) {\n            this._pageComponent.destroy();\n            this._pageComponent = null;\n          }\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    if (this._pageComponent) {\n      this._pageComponent.destroy();\n      this._pageComponent = null;\n    }\n  }\n}\n\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @element ons-switch\n * @directive OnsSwitch\n * @selector ons-switch\n * @description\n *   [en]Angular directive for `<ons-switch>` component.[/en]\n *   [ja]`<ons-switch>`要素のAngularディレクティブです。[/ja]\n * @example\n *   <ons-switch [(value)]=\"target\"></ons-switch>\n */\n@Directive({\n  selector: 'ons-switch',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsSwitch),\n      multi: true,\n    }\n  ]\n})\nexport class OnsSwitch implements OnChanges, OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _propagateChange = (_: any) => { };\n  private _propagateTouched = () => {};\n\n  /**\n   * @input value\n   * @desc\n   *   [en]Specify the value of the `<ons-switch>` component.[/en]\n   *   [ja]`ons-switch`コンポーネントに設定する値を指定します。[/ja]\n   */\n  @Input('value') set value(target: boolean) {\n    this._element.checked = !!target;\n  }\n\n  /**\n   * @output valueChange\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n\n  _onChange(event: any) {\n    this._valueChange.emit(this._element.checked);\n    this._propagateChange(this._element.checked);\n  }\n\n  @HostListener('blur')\n  _onBlur() {\n    this._propagateTouched();\n  }\n\n  ngOnChanges(changeRecord: SimpleChanges) {\n    const value = !!(<any>changeRecord).value.currentValue;\n    this._element.checked = value;\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._element.checked = obj;\n  }\n\n  registerOnChange(fn: any) {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this. _propagateTouched = fn;\n  }\n}\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChange,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @element ons-range\n * @directive OnsRange\n * @selector ons-range\n * @description\n *   [en]Angular directive for `<ons-range>` component.[/en]\n *   [ja]`<ons-range>`要素のAngularディレクティブです。[/ja]\n * @example\n *   <ons-range [(value)]=\"foo\"></ons-range>\n */\n@Directive({\n  selector: 'ons-range',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsRange),\n      multi: true,\n    }\n  ]\n})\nexport class OnsRange implements OnChanges, OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _propagateChange = (_: any) => { };\n  private _propagateTouched = () => {};\n\n  /**\n   * @input value\n   * @desc\n   *   [en]Input value of the `<ons-range>` element..[/en]\n   *   [ja]`ons-range`要素に対する入力値を指定します。[/ja]\n   */\n  @Input('value') _value: string;\n\n  /**\n   * @output valueChange\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('input', this._boundOnChange);\n  }\n\n  _onChange(event: any) {\n    this._valueChange.emit(this._element.value);\n    this._propagateChange(this._element.value);\n  }\n\n  @HostListener('blur')\n  _onBlur() {\n    this._propagateTouched();\n  }\n\n  ngOnChanges(changeRecord: {[key: string]: SimpleChange;}) {\n    const value = changeRecord['_value'].currentValue;\n    this._element.value = value;\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('input', this._boundOnChange);\n\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._element.value = obj;\n  }\n\n  registerOnChange(fn: any) {\n     this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this. _propagateTouched = fn;\n  }\n}\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as ons from 'onsenui';\n\n/**\n * @element ons-select\n * @directive OnsSelect\n * @selector ons-select\n * @description\n *   [en]Angular directive for `<ons-select>` component.[/en]\n *   [ja]`<ons-select>`要素のAngularディレクティブです。[/ja]\n * @example\n *   <ons-select [(ngModel)]=\"selectedValue\">\n *     <option value=\"Item A\">Item A</option>\n *     <option value=\"Item B\">Item B</option>\n *     <option value=\"Item C\">Item C</option>\n *   </ons-select>\n */\n@Directive({\n  selector: 'ons-select',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsSelect),\n      multi: true,\n    }\n  ]\n})\nexport class OnsSelect implements OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _propagateChange = (_: any) => { };\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n\n  _onChange(event: any) {\n    this._propagateChange(event.target.value);\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._element.value = obj;\n  }\n\n  registerOnChange(fn: any) {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChange,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @element ons-input\n * @directive OnsInput\n * @selector ons-input\n * @description\n *   [en]Angular directive for `<ons-input>` component.[/en]\n *   [ja]`<ons-input>`要素のAngularディレクティブです。[/ja]\n * @example\n *   <ons-input [(value)]=\"value\"></ons-input>\n */\n@Directive({\n  selector: 'ons-input',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsInput),\n      multi: true,\n    }\n  ]\n})\nexport class OnsInput implements OnChanges, OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _propagateChange = (_: any) => { };\n  private _propagateTouched = () => {};\n\n  /**\n   * @input value\n   * @desc\n   *   [en]Input value for the internal `<input>` element.[/en]\n   *   [ja]内部の`input`要素に対する入力値を設定します。[/ja]\n   */\n  @Input('value') _value: string;\n\n  /**\n   * @output valueChange\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]内部の`input`要素の値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('input', this._boundOnChange);\n  }\n\n  _onChange(event: any) {\n    this._valueChange.emit(this._element.value);\n    this._propagateChange(this._element.value);\n  }\n\n  @HostListener('blur')\n  _onBlur() {\n    this._propagateTouched();\n  }\n\n  ngOnChanges(changeRecord: {[key: string]: SimpleChange;}) {\n    const value = changeRecord['_value'].currentValue;\n    if (this._element.value !== value) {\n      this._element.value = value;\n    }\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('input', this._boundOnChange);\n\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._element.value = obj;\n  }\n \n  registerOnChange(fn: any) {\n     this._propagateChange = fn;\n  }\n \n  registerOnTouched(fn: any) {\n    this. _propagateTouched = fn;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  OnDestroy,\n  EventEmitter\n} from '@angular/core';\n\n/**\n * @element ons-pull-hook\n * @directive OnsPullHook\n * @selector ons-pull-hook\n * @description\n *   [en]Angular directive for `<ons-pull-hook>` component.[/en]\n *   [ja]`<ons-pull-hook>`要素のためのAngular2ディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-page>\n *       <ons-toolbar>\n *         <div class=\"center\">Pull Hook</div>\n *       </ons-toolbar>\n *       <div class=\"content\">\n *         <ons-pull-hook height=\"64px\" threshold-height=\"128px\" \n *           (pull)=\"onPull($event)\" (changestate)=\"onChangeState($event)\" (action)=\"onAction($event)\">\n *           {{message}}\n *         </ons-pull-hook>\n *       </div>\n *     </ons-page>\n *     `\n *   })\n *   export class AppComponent {\n *     message: string = 'Pull down to refresh';\n *\n *     onAction($event) {\n *       setTimeout(() => {\n *         $event.done();\n *       }, 1000);\n *     }\n *\n *     onChangeState($event) {\n *       switch ($event.state) {\n *         case 'initial':\n *           this.message = 'Pull down to refresh';\n *           break;\n *         case 'preaction':\n *           this.message = 'Release to refresh';\n *           break;\n *         case 'action':\n *           this.message = 'Loading data...';\n *           break;\n *       }\n *     }\n * \n *     onPull($event) {\n *       console.log($event.ratio);\n *     }\n * \n *   }\n */\n@Directive({\n  selector: 'ons-pull-hook'\n})\nexport class OnsPullHook implements OnDestroy {\n  private _element: any;\n\n  /**\n   * @output action\n   * @param $event\n   * @param $event.done\n   * @desc\n   *   [en]Triggers when the page is pulled down.[/en]\n   *   [ja]`ons-pull-hook`要素のアクションが必要なときに呼び出されます。[/ja]\n   */\n  @Output() action = new EventEmitter();\n\n  /**\n   * @output changestate\n   * @param $event\n   * @param $event.state\n   * @desc\n   *   [en]Triggers when the state is changed.[/en]\n   *   [ja]`ons-pull-hook`要素の状態が変わった時に呼び出されます。[/ja]\n   */\n\n\n  /**\n   * @output pull\n   * @param $event\n   * @param $event.ratio\n   * @param $event.options\n   * @desc\n   *   [en]Triggers whenever the element is pulled.[/en]\n   *   [ja]`ons-pull-hook`要素がプルされているときに呼び出されます。[/ja]\n   */\n  @Output() pull = new EventEmitter();\n\n  constructor(private _elementRef: ElementRef) {\n    this._element = _elementRef.nativeElement;\n    this._element.onAction = (done: Function) => this.action.emit({done});\n    this._element.onPull = (ratio: number, options: any) => this.pull.emit({ratio, options});\n  }\n\n  ngOnDestroy() {\n    this._element.onAction = null;\n    this._element = null;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport * as ons from 'onsenui';\n\nexport class ItemContext {\n  constructor(public $implicit: any, public index: number, public count: number) {\n  }\n}\n\n/**\n * @element ons-lazy-repeat\n * @directive OnsLazyRepeat\n * @selector [ons-lazy-repeat]\n * @description\n *   [en]Angular directive for `<ons-lazy-repeat>` component.[/en]\n *   [ja]`<ons-lazy-repeat>`要素と同じ機能を提供するAngularディレクティブです。[/ja]\n * @example\n *   <ons-list>\n *     <ons-list-item *onsLazyRepeat=\"let item of items; let i = index\">\n *       #{{i}} {{item.msg}}\n *     </ons-list-item>\n *   </ons-list>\n */\n@Directive({\n  selector: '[onsLazyRepeat]'\n})\nexport class OnsLazyRepeat implements OnDestroy {\n  private _element: any;\n  private _provider: any;\n  private _onsLazyRepeatOf: any;\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _templateRef: TemplateRef<ItemContext>,\n    private _viewContainer: ViewContainerRef) {\n  }\n\n  /**\n   * @input onsLazyRepeat\n   * @desc\n   *   [en]Render infinite lists with \"let of\" syntax in Angular.[/en]\n   *   [ja]let of式を指定します。[/ja]\n   * @example\n   *  <ons-list>\n   *    <ons-list-item *onsLazyRepeat=\"let message of messages\">\n   *      {{message}}\n   *    </ons-list-item>\n   *  </ons-list>\n   */\n  @Input() set onsLazyRepeatOf(value: any) {\n    this._onsLazyRepeatOf = value;\n\n    this._provider = new (<any>ons)._internal.LazyRepeatProvider(\n      this._elementRef.nativeElement.parentElement,\n      new (<any>ons)._internal.LazyRepeatDelegate({\n        loadItemElement: (index: number, done: Function) => {\n          this._loadItemTemplate(index, done);\n        },\n        countItems: () => {\n          return this._onsLazyRepeatOf.length;\n        }\n      })\n    );\n  }\n\n  _loadItemTemplate(index: number, done: Function) {\n    const context = new ItemContext(this._onsLazyRepeatOf[index], index, this._onsLazyRepeatOf.length);\n    const view = this._viewContainer.createEmbeddedView(this._templateRef, context);\n    // dirty fix on createEmbeddedView() does not insert DOM element randomly.\n\n    done({element: view.rootNodes[0]});\n  }\n\n  refresh() {\n    if (this._provider) {\n      this._viewContainer.clear();\n      this._provider.refresh();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._provider) {\n      this._provider.destroy();\n    }\n    this._viewContainer.clear();\n    this._provider = null;\n  }\n}\n","import {\n  Type,\n  ComponentRef,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  NgZone\n} from '@angular/core';\nimport * as ons from 'onsenui';\n\nimport {Params} from '../ons/params';\n\n/**\n * @element ons-splitter-side\n * @directive OnsSplitterSide\n * @selector ons-splitter-side\n * @description\n *   [ja]`<ons-splitter-side>`要素のAngularディレクティブです。[/ja]\n *   [en]Angular directive for `<ons-splitter-side>` component.[/en]\n * @example\n *   @Component({\n *     selector: 'ons-page',\n *     template: `\n *       <ons-toolbar>\n *         <div class=\"center\">Left Page</div>\n *       </ons-toolbar>\n *       <div class=\"background\"></div>\n *       <div class=\"content\">\n *         Left\n *       </div>\n *     `\n *   })\n *   class SidePageComponent { }\n *\n *   @Component({\n *     selector: 'app',\n *     template: `\n *     <ons-splitter>\n *       <ons-splitter-side [page]=\"sidePage\" side=\"left\" width=\"200px\">\n *       </ons-splitter-side>\n *       <ons-splitter-content>...</ons-splitter-content>\n *     </ons-splitter>\n *     `\n *   })\n *   export class AppComponent {\n *     sidePage = SidePageComponent;\n *   }\n */\n@Directive({\n  selector: 'ons-splitter-side'\n})\nexport class OnsSplitterSide {\n\n  /**\n   * @input page\n   * @desc\n   *   [en]Page content.[/en]\n   *   [ja]表示するページコンポーネントのクラスを指定します。[/ja]\n   */\n  @Input('page') set page(page: Type<any>) {\n    this.element.page = page;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewContainer: ViewContainerRef,\n    private _resolver: ComponentFactoryResolver,\n    private _injector: Injector,\n    private _zone: NgZone) {\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n\n  get nativeElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _createPageLoader() {\n    const componentRefMap:WeakMap<HTMLElement, ComponentRef<any>> = new WeakMap<HTMLElement, ComponentRef<any>>();\n\n    return new ons.PageLoader(\n      ({page, parent, params}: any, done: Function) => {\n        this._zone.run(() => {\n          const injector = Injector.create({\n            providers: [\n              {provide: Params, useValue: new Params(params || {})},\n              {provide: OnsSplitterSide, useValue: this}\n            ],\n            parent: this._injector\n          });\n\n          const factory = this._resolver.resolveComponentFactory(page);\n          const pageComponentRef = this._viewContainer.createComponent(factory, 0, injector);\n          const pageElement = pageComponentRef.location.nativeElement;\n          componentRefMap.set(pageElement, pageComponentRef);\n\n          this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n          done(pageElement);\n        });\n      },\n      (element: any) => {\n        const componentRef = componentRefMap.get(element);\n\n        if (componentRef) {\n          componentRef.destroy();\n          componentRefMap.delete(element);\n        }\n      }\n    );\n  }\n}\n\n/**\n * @element ons-splitter-content\n * @directive OnsSplitterContent\n * @selector ons-splitter-content\n * @description\n *    [ja]`<ons-splitter-content>`要素のためのAngular2 ディレクティブです。[/ja]\n *    [en]Angular directive for `<ons-splitter-content>` component.[/en]\n */\n@Directive({\n  selector: 'ons-splitter-content'\n})\nexport class OnsSplitterContent {\n  /**\n   * @input page\n   * @desc\n   *   [en]Specify the page component.[/en]\n   *   [ja]表示するページコンポーネントのクラスを指定します。[/ja]\n   */\n  @Input('page') set page(page: Type<any>) {\n    this.element.page = page;\n  }\n\n  constructor(\n    private _elementRef: ElementRef,\n    private _viewContainer: ViewContainerRef,\n    private _resolver: ComponentFactoryResolver,\n    private _injector: Injector) {\n    this.element.pageLoader = this._createPageLoader();\n  }\n\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n\n  get nativeElement() {\n    return this._elementRef.nativeElement;\n  }\n\n  _createPageLoader() {\n    const componentRefMap:WeakMap<HTMLElement, ComponentRef<any>> = new WeakMap<HTMLElement, ComponentRef<any>>();\n\n    return new ons.PageLoader(\n      ({page, parent, params}: any, done: Function) => {\n        const injector = Injector.create({\n          providers: [\n            {provide: Params, useValue: new Params(params || {})},\n            {provide: OnsSplitterContent, useValue: this}\n          ],\n          parent: this._injector\n        });\n\n        const factory = this._resolver.resolveComponentFactory(page);\n        const pageComponentRef = this._viewContainer.createComponent(factory, 0, injector);\n        const pageElement = pageComponentRef.location.nativeElement;\n        componentRefMap.set(pageElement, pageComponentRef);\n\n        this.element.appendChild(pageElement); // dirty fix to insert in correct position\n\n        done(pageElement);\n      },\n      (element: any) => {\n        const componentRef = componentRefMap.get(element);\n\n        if (componentRef) {\n          componentRef.destroy();\n          componentRefMap.delete(element);\n        }\n      }\n    );\n  }\n}\n","import * as ons from 'onsenui';\n\n/**\n * @object onsNotification\n */\nexport const onsNotification = ons.notification;\n","import * as ons from 'onsenui';\n\nexport const onsPlatform = ons.platform;\n","import {\n  Injector,\n  Injectable,\n  ApplicationRef,\n  ComponentRef\n} from '@angular/core';\n\n@Injectable()\nexport class ComponentLoader {\n  constructor(private appRef: ApplicationRef) {\n  }\n\n  // Load an instance of ComponentRef in app view.\n  load(componentRef: ComponentRef<any>) {\n    const rootElement = componentRef.location.nativeElement;\n\n    if (this.appRef.attachView) {\n      this.appRef.attachView(componentRef.hostView);\n\n      componentRef.onDestroy(() => {\n        this.appRef.detachView(componentRef.hostView);\n\n        if (rootElement.parentNode) {\n          rootElement.parentNode.removeChild(rootElement);\n        }\n      });\n    } else {\n      if ((<any>this.appRef).registerChangeDetector) {\n        (<any>this.appRef).registerChangeDetector(componentRef.changeDetectorRef);\n      }\n\n      componentRef.onDestroy(() => {\n        if ((<any>this.appRef).unregisterChangeDetector) {\n          (<any>this.appRef).unregisterChangeDetector(componentRef.changeDetectorRef);\n        }\n\n        if (rootElement.parentNode) {\n          rootElement.parentNode.removeChild(rootElement);\n        }\n      });\n    }\n\n    const rootContainer = (<any>this.appRef).components[0].location.nativeElement;\n    rootContainer.appendChild(rootElement);\n  }\n}\n\n\n","import {\n  Injector,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  Type,\n  NgZone\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface AlertDialogRef {\n  alertDialog: any;\n  destroy: Function;\n}\n\n/**\n * @object AlertDialogFactory\n */\n@Injectable()\nexport class AlertDialogFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader,\n    private _zone: NgZone\n  ) {\n  }\n\n  createAlertDialog(componentType: Type<any>, params: Object = {}): Promise<AlertDialogRef> {\n    console.warn('[ngx-onsenui] AlertDialogFactory is deprecated since 4.0.0-rc.0. Place <ons-alert-dialog> into your component instead.');\n\n    return new Promise(resolve => {\n      setImmediate(() => {\n        this._zone.run(() => {\n          const factory = this._resolver.resolveComponentFactory(componentType);\n          const injector = Injector.create({\n            providers: [\n              {provide: Params, useValue: new Params(params)}\n            ],\n            parent: this._injector\n          });\n          const componentRef = factory.create(injector);\n          const rootElement = componentRef.location.nativeElement;\n\n          this._componentLoader.load(componentRef);\n\n          const element = rootElement.children[0];\n          const alertDialogElement = element.tagName === 'ONS-ALERT-DIALOG' ? element : element.querySelector('ons-alert-dialog');\n\n          if (!alertDialogElement) {\n            throw Error('<ons-alert-dialog> element is not found in component\\'s template.');\n          }\n\n          resolve({alertDialog: alertDialogElement, destroy: () => componentRef.destroy()});\n        });\n      });\n    });\n  }\n}\n","import {\n  Injector,\n  ElementRef,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  ViewContainerRef,\n  Type,\n  NgZone\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface PopoverRef {\n  popover: any;\n  destroy: Function;\n}\n\n/**\n * @object PopoverFactory\n */\n@Injectable()\nexport class PopoverFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader,\n    private _zone: NgZone\n  ) {\n  }\n\n  createPopover(componentType: any, params: Object = {}): Promise<PopoverRef> { // TODO: fix \"any\"\n    console.warn('[ngx-onsenui] PopoverFactory is deprecated since 4.0.0-rc.0. Place <ons-popover> into your component instead.');\n\n    return new Promise(resolve => {\n      setImmediate(() => {\n        this._zone.run(() => {\n          const factory = this._resolver.resolveComponentFactory(componentType);\n          const injector = Injector.create({\n            providers: [\n              {provide: Params, useValue: new Params(params)}\n            ],\n            parent: this._injector\n          });\n          const componentRef = factory.create(injector);\n          const rootElement = componentRef.location.nativeElement;\n\n          this._componentLoader.load(componentRef);\n\n          const element = rootElement.children[0];\n          const popoverElement = element.tagName === 'ONS-POPOVER' ? element : element.querySelector('ons-popover');\n\n          if (!popoverElement) {\n            throw Error('<ons-popover> element is not found in component\\'s template.');\n          }\n\n          resolve({popover: popoverElement, destroy: () => componentRef.destroy()});\n        });\n      });\n    });\n  }\n}\n","import {\n  Injector,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  Type,\n  NgZone\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface DialogRef {\n  dialog: any;\n  destroy: Function;\n}\n\n/**\n * @object DialogFactory\n */\n@Injectable()\nexport class DialogFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader,\n    private _zone: NgZone\n  ) {\n  }\n\n  createDialog(componentType: Type<any>, params: Object = {}): Promise<DialogRef> { // TODO: fix \"any\"\n    console.warn('[ngx-onsenui] DialogFactory is deprecated since 4.0.0-rc.0. Place <ons-dialog> into your component instead.');\n\n    return new Promise(resolve => {\n      setImmediate(() => {\n        this._zone.run(() => {\n          const factory = this._resolver.resolveComponentFactory(componentType);\n          const injector = Injector.create({\n            providers: [\n              {provide: Params, useValue: new Params(params)}\n            ],\n            parent: this._injector\n          });\n          const componentRef = factory.create(injector);\n          const rootElement = componentRef.location.nativeElement;\n\n          this._componentLoader.load(componentRef);\n\n          const element = rootElement.children[0];\n          const dialogElement = element.tagName === 'ONS-DIALOG' ? element : element.querySelector('ons-dialog');\n\n          if (!dialogElement) {\n            throw Error('<ons-dialog> element is not found in component\\'s template.');\n          }\n\n          resolve({dialog: dialogElement, destroy: () => componentRef.destroy()});\n        });\n      });\n    });\n  }\n}\n\n","import {\n  Injector,\n  ComponentFactoryResolver,\n  Injectable,\n  ApplicationRef,\n  ComponentRef,\n  Type,\n  NgZone\n} from '@angular/core';\nimport {Params} from './params';\nimport {ComponentLoader} from './component-loader';\n\nexport interface ModalRef {\n  modal: any;\n  destroy: Function;\n}\n\n/**\n * @object ModalFactory\n */\n@Injectable()\nexport class ModalFactory {\n\n  constructor(\n    private _injector: Injector,\n    private _resolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _componentLoader: ComponentLoader,\n    private _zone: NgZone\n  ) {\n  }\n\n  createModal(componentType: Type<any>, params: Object = {}): Promise<ModalRef> {\n    console.warn('[ngx-onsenui] ModalFactory is deprecated since 4.0.0-rc.0. Place <ons-modal> into your component instead.');\n\n    return new Promise(resolve => {\n      setImmediate(() => {\n        this._zone.run(() => {\n          const factory = this._resolver.resolveComponentFactory(componentType);\n          const injector = Injector.create({\n            providers: [\n              {provide: Params, useValue: new Params(params)}\n            ],\n            parent: this._injector\n          });\n          const componentRef = factory.create(injector);\n          const rootElement = componentRef.location.nativeElement;\n\n          this._componentLoader.load(componentRef);\n\n          const element = rootElement.children[0];\n          const modalElement = element.tagName === 'ONS-MODAL' ? element : element.querySelector('ons-modal');\n\n          if (!modalElement) {\n            throw Error('<ons-modal> element is not found in component\\'s template.');\n          }\n\n          resolve({modal: modalElement, destroy: () => componentRef.destroy()});\n        });\n      });\n    });\n  }\n}\n","import {\n  Component,\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges\n} from '@angular/core';\n\n/**\n * @element ons-segment\n * @directive OnsSegment\n * @selector ons-segment\n * @description\n *   [en]Angular directive for `<ons-segment>` component.[/en]\n *   [ja]`<ons-segment>`要素のAngularディレクティブです。[/ja]\n * @example\n *   @Component({\n *     selector: 'app',\n *     template: `\n *       <ons-page>\n *         <ons-toolbar>\n *           <div class=\"center\">\n *             <ons-segment style=\"width: 280px; margin-top: 8px;\" [tabbar]=\"tabbar\" (postchange)=\"onPostChange($event)\">\n *               <button>Page 1</button>\n *               <button>Page 2</button>\n *               <button>Page 3</button>\n *             </ons-segment>\n *           </div>\n *         </ons-toolbar>\n *         <ons-tabbar #tabbar>\n *           <ons-tab [page]=\"page1\" active></ons-tab>\n *           <ons-tab [page]=\"page2\"></ons-tab>\n *           <ons-tab [page]=\"page3\"></ons-tab>\n *         </ons-tabbar>\n *       </ons-page>\n *     `\n *   })\n *   export class AppComponent {\n *     page1 = PageComponent;\n *     page2 = PageComponent;\n *     page3 = PageComponent;\n *\n *     constructor() {}\n *\n *     onPostChange(event: any) {\n *      console.log('postchange event', event);\n *     }\n *   }\n *\n *   @Component({\n *     selector: 'ons-page[tab]',\n *     template: `<h2>Page</h2>`\n *   })\n *   export class PageComponent {\n *     constructor() { }\n *   }\n */\n@Directive({\n  selector: 'ons-segment'\n})\nexport class OnsSegment implements OnChanges {\n  private _element: any;\n\n  /**\n   * @output postchange\n   * @param $event\n   * @param $event.index\n   * @desc\n   *   [en]Triggers when the index of the active button is changed.[/en]\n   *   [ja]`ons-segment`要素のアクティブなボタンのインデックスが変わった時に呼び出されます。[/ja]\n   */\n\n  /**\n   * @input activeIndex\n   * @desc\n   *   [en]Input index of the active button.[/en]\n   *   [ja]アクティブなボタンのインデックスを設定します。[/ja]\n   */\n  @Input() activeIndex: number;\n\n  /**\n   * @output activeIndexChange\n   * @desc\n   *   [en]Triggers when the index of the active button is changed.[/en]\n   *   [ja]アクティブなボタンのインデックスが変化した時に発火します。[/ja]\n   */\n  @Output() activeIndexChange = new EventEmitter<number>();\n\n  /**\n   * @input tabbar\n   * @desc\n   *   [en]The tabbar component to \"connect\" to the segment. Must be inside the same page. Works only during initialization.[/en]\n   *   [ja]このセグメントに紐づけるタブバーを指定します。タブバーはセグメントと同一ページ内に存在する必要があります。初期化時にのみ動作します。[/ja]\n   */\n  @Input() set tabbar(_tabbar: any) {\n    this._element._tabbar = _tabbar;\n    this._element._tabbar.setAttribute('hide-tabs', '');\n    setImmediate(() => this._element._setChecked(this._element._tabbar.getActiveTabIndex()));\n    this._element._tabbar.addEventListener('prechange', this._element._onTabbarPreChange);\n  }\n\n  constructor(private _elementRef: ElementRef) {\n    this._element = _elementRef.nativeElement;\n    this._element.addEventListener('postchange', (event: any) => {\n      this.activeIndexChange.emit(event.index);\n    });\n  }\n\n  ngOnChanges() {\n    if (this.activeIndex) {\n      this._element.setActiveButton(this.activeIndex);\n    }\n  }\n\n}\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  HostListener,\n  EventEmitter,\n  OnChanges,\n  OnDestroy,\n  SimpleChange,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @element ons-search-input\n * @directive OnsSearchInput\n * @selector ons-search-input\n * @description\n *   [en]Angular directive for `<ons-search-input>` component.[/en]\n *   [ja]`<ons-search-input>`要素のAngularディレクティブです。[/ja]\n * @example\n *   <ons-search-input [(value)]=\"value\"></ons-search-input>\n */\n@Directive({\n  selector: 'ons-search-input',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsSearchInput),\n      multi: true,\n    }\n  ]\n})\nexport class OnsSearchInput implements OnChanges, OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _propagateChange = (_: any) => { };\n  private _propagateTouched = () => {};\n\n  /**\n   * @input value\n   * @desc\n   *   [en]Input value for the internal `<input>` element.[/en]\n   *   [ja]内部の`input`要素に対する入力値を設定します。[/ja]\n   */\n  @Input('value') _value: string;\n\n  /**\n   * @output valueChange\n   * @desc\n   *   [en]Triggers when the value is changed.[/en]\n   *   [ja]内部の`input`要素の値が変更された時に発火します。[/ja]\n   */\n  @Output('valueChange') _valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('input', this._boundOnChange);\n  }\n\n  @HostListener('blur')\n  _onBlur() {\n    this._propagateTouched();\n  }\n\n  _onChange(event: any) {\n    this._valueChange.emit(this._element.value);\n    this._propagateChange(this._element.value);\n  }\n\n  ngOnChanges(changeRecord: {[key: string]: SimpleChange;}) {\n    const value = changeRecord['_value'].currentValue;\n    if (this._element.value !== value) {\n      this._element.value = value;\n    }\n  }\n\n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('input', this._boundOnChange);\n\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._element.value = obj;\n  }\n \n  registerOnChange(fn: any) {\n     this._propagateChange = fn;\n  }\n \n  registerOnTouched(fn: any) {\n    this. _propagateTouched = fn;\n  }\n}\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @element ons-checkbox\n * @directive OnsCheckbox\n * @selector ons-checkbox\n * @description\n *   [en]Angular directive for `<ons-checkbox>` component. You can use `[(ngModel)]` to synchronize the value of `[(ngModel)]` with the array of the selected values.[/en]\n *   [ja]`<ons-checkbox>`要素のAngularディレクティブです。 `[(ngModel)]` を使用すると、 `[(ngModel)]` の値を選択された値の配列と同期することができます。[/ja]\n * @example\n *   <ons-checkbox value=\"Item A\" [(ngModel)]=\"selectedValues\"></ons-checkbox>\n *   <ons-checkbox value=\"Item B\" [(ngModel)]=\"selectedValues\"></ons-checkbox>\n *   <ons-checkbox value=\"Item C\" [(ngModel)]=\"selectedValues\"></ons-checkbox>\n */\n@Directive({\n  selector: 'ons-checkbox',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsCheckbox),\n      multi: true,\n    }\n  ]\n})\nexport class OnsCheckbox implements OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _state: any[] | boolean;\n  private _propagateChange = (_: any) => { };\n  \n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n  \n  _onChange(event: any) {\n    const { value, checked } = event.target;\n    let newValue;\n\n    if (this._state instanceof Array) {\n      // Is Array\n      const index = this._state.indexOf(value);\n      const included = index >= 0;\n\n      if (included && !checked) {\n        newValue = [\n          ...this._state.slice(0, index),\n          ...this._state.slice(index + 1, this._state.length)\n        ];\n      }\n\n      if (!included && checked) {\n        newValue = [ ...this._state, value ];\n      }\n\n    } else {\n      // Is Boolean\n      newValue = checked;\n    }\n\n    // Emit if value changed\n    if (newValue !== undefined) {\n      this._state = newValue;\n      this._propagateChange(this._state);\n    }\n  }\n  \n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._state = obj;\n    if (obj instanceof Array) {\n      this._element.checked = obj.indexOf(this._element.value) >= 0;\n    } else {\n      this._element.checked = obj;\n    }\n  }\n\n  registerOnChange(fn: any) {\n      this._propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n","import {\n  Component,\n  Injector,\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * @element ons-radio\n * @directive OnsRadio\n * @selector ons-radio\n * @description\n *   [en]Angular directive for `<ons-radio>` component. You can use `[(ngModel)]` to synchronize the value of `[(ngModel)]` with the selected value.[/en]\n *   [ja]`<ons-radio>`要素のAngularディレクティブです。 `[(ngModel)]` を使用すると、 `[(ngModel)]` の値を選択された値と同期することができます。[/ja]\n * @example\n *   <ons-radio value=\"Item A\" [(ngModel)]=\"selectedValue\"></ons-radio>\n *   <ons-radio value=\"Item B\" [(ngModel)]=\"selectedValue\"></ons-radio>\n *   <ons-radio value=\"Item C\" [(ngModel)]=\"selectedValue\"></ons-radio>\n */\n@Directive({\n  selector: 'ons-radio',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OnsRadio),\n      multi: true,\n    }\n  ]\n})\nexport class OnsRadio implements OnDestroy, ControlValueAccessor {\n  private _element: any;\n  private _boundOnChange: Function;\n  private _propagateChange = (_: any) => { };\n  \n  constructor(private _elementRef: ElementRef) {\n    this._boundOnChange = this._onChange.bind(this);\n    this._element = _elementRef.nativeElement;\n\n    this._element.addEventListener('change', this._boundOnChange);\n  }\n  \n  _onChange(event: any) {\n    const { value, checked } = event.target;\n    checked && this._propagateChange(value);\n  }\n  \n  get element(): any {\n    return this._element;\n  }\n\n  get nativeElement(): any {\n    return this._element;\n  }\n\n  ngOnDestroy() {\n    this._element.removeEventListener('change', this._boundOnChange);\n\n    this._element = null;\n  }\n\n  writeValue(obj: any) {\n    this._element.checked = (obj === this._element.value);\n  }\n\n  registerOnChange(fn: any) {\n      this._propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n","export * from '@angular/core';\nexport * from './directives/ons-navigator';\nexport * from './directives/ons-tabbar';\nexport * from './directives/ons-switch';\nexport * from './directives/ons-range';\nexport * from './directives/ons-select';\nexport * from './directives/ons-input';\nexport * from './directives/ons-pull-hook';\nexport * from './directives/ons-lazy-repeat';\nexport * from './directives/ons-splitter';\n\nexport * from './ons/notification';\nexport * from './ons/platform';\nexport * from './ons/alert-dialog-factory';\nexport * from './ons/popover-factory';\nexport * from './ons/dialog-factory';\nexport * from './ons/modal-factory';\nexport * from './ons/params';\n\nimport {NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {OnsNavigator} from './directives/ons-navigator';\nimport {OnsTabbar, OnsTab} from './directives/ons-tabbar';\nimport {OnsSegment} from './directives/ons-segment';\nimport {OnsSwitch} from './directives/ons-switch';\nimport {OnsRange} from './directives/ons-range';\nimport {OnsSelect} from './directives/ons-select';\nimport {OnsInput} from './directives/ons-input';\nimport {OnsSearchInput} from './directives/ons-search-input';\nimport {OnsCheckbox} from './directives/ons-checkbox';\nimport {OnsRadio} from './directives/ons-radio';\nimport {OnsPullHook} from './directives/ons-pull-hook';\nimport {OnsLazyRepeat} from './directives/ons-lazy-repeat';\nimport {OnsSplitterSide, OnsSplitterContent} from './directives/ons-splitter';\n\nimport {AlertDialogFactory} from './ons/alert-dialog-factory';\nimport {PopoverFactory} from './ons/popover-factory';\nimport {DialogFactory} from './ons/dialog-factory';\nimport {ModalFactory} from './ons/modal-factory';\nimport {ComponentLoader} from './ons/component-loader';\n\nconst directives = [\n  OnsNavigator,\n  OnsTabbar,\n  OnsTab,\n  OnsSegment,\n  OnsSwitch,\n  OnsRange,\n  OnsSelect,\n  OnsInput,\n  OnsSearchInput,\n  OnsCheckbox,\n  OnsRadio,\n  OnsPullHook,\n  OnsLazyRepeat,\n  OnsSplitterSide,\n  OnsSplitterContent\n];\n\n@NgModule({\n  imports: [BrowserModule, CommonModule],\n  declarations: [directives],\n  exports: [\n    directives,\n    BrowserModule\n  ],\n  providers: [\n    AlertDialogFactory,\n    PopoverFactory,\n    DialogFactory,\n    ModalFactory,\n    ComponentLoader\n  ]\n})\nexport class OnsenModule { }\n\n"],"names":["ons.PageLoader","PageLoader","((/** @type {?} */ (ons)))._internal","ons.notification","ons.platform"],"mappings":"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"}
